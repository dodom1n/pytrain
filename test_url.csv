url,초록
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=183f2a048f50ca40d18150b21a227875&keyword=파이썬,"Python is an object oriented programming language, similar to Perl and Ruby. It supports a dynamic typing and operates using a python interpreter. Static typing languages such as Fortran and C emphasize efficient execution program. On the other hand, Python’s design philosophy values productivity of programmers. In general, a Python version of an algorithm is shorter and slower than its Fortran or C versions. Recent development of numerical libraries shortened the runtime of Python numerical programs and many scientists and engineers adopt Python as their programming language. In this study, I compared Python and Fortran programming languages by developing functions of simple algorithms used in seismic data processing. I tried to make Python programs efficient by exploiting numerical libraries. Benchmarking examples show that small-scale data processing programming using Python and Numpy library can be more efficient than that using Fortran language. 파이썬은 펄, 루비 등과 같은 객체지향 프로그래밍 언어로, 해석기를 통해 작동하며 동적 자료형을지원한다. 계산 속도를 중시하여 정적 자료형을 이용하는 포트란 프로그래밍에서와 달리 파이썬 프로그래밍에서는 개발자의 생산성을 더 중시한다. 일반적인 파이썬 프로그램의 경우 동일한 기능의 포트란 프로그램에 비해개발 시간은 짧지만 실행 시간은 길다. 최근 수치 계산 라이브러리들이 발전되면서 파이썬 프로그램의 실행시간이 짧아지고 있고, 과학 및 공학 계산에 파이썬을 이용하는 사례가 증가하고 있다. 본 연구에서는 탄성파자료처리에 사용되는 간단한 알고리즘들을 대상으로 수치 라이브러리들을 통해 파이썬 프로그램의 실행 속도를향상시키는 방법을 살펴본다. 예제들을 통해 프로그램 작성 시간을 고려하면 소규모 자료처리의 경우 포트란대신 파이썬과 Numpy 라이브러리를 이용하는 것이 더 효율적임을 알 수 있다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=257a40c58b0665624884a65323211ff0&keyword=파이썬,"컴퓨터 프로그래밍은 인터랙티브 미디어 제작에 꼭 필요한 핵심 기술이다. 프로세싱과 같이 아티스트들의 콘텐츠 제작을 돕는 언어 도구들이 존재하지만, 성능과 범용성 측면에서 충분하지 않다. 본 연구에서는 최근 프로그래밍 교육 분야에서 호평을 받고 있는 파이썬 언어를 게임 개발 정규 교과에 도입하고 그 효과를 살펴봄으로써, 게임을 포함한 인터랙티브 미디어를 효율적으로 구현하기 위한 대안으로써의 파이썬의 가치를 분석했다. 한국산업기술대학교 2014년 2학기 2D게임프로그래밍 교과를 대상으로 한 연구 결과, 모든 학생들이 파이썬을 처음 접했음에도 불구하고 개인별 프로젝트의 완료율은 예년과 비교했을 때 19%의 상승이 있었으며, 콘텐츠 개발 학습에 있어 98.5%의 긍정적인 평가가 나왔다. 결과적으로, 파이썬이 콘텐츠의 효율적인 개발을 가능하게 할 뿐만 아니라, 교육 과정도 크게 개선할 수 있음이 확인되었다. 따라서, 게임과 핵심적인 구성요소가 동일한 일반적인 인터랙티브 미디어의 개발에도 파이썬을 활용해볼 것을 제안한다. Computer programming is one of the core skills required to implement interactive  media contents. Several tools such as Processing are available in public domain which help artist to  create contents. However, those tools do not have enough capabilities in terms of  performance and usability. In this research, we’ve introduced Python to a regular  game programming course - ‘2D Game Programming’ - in order to evaluate the  feasibility of Python as a good alternative way of efficient interactive media creation.  All the students in the class were first time to using Python. However, the  completion rate of individual term project has increased a lot by 19% compared to  the previous courses, and 98.5% of the students has responded in positive for  choosing Python in learning game development. This shows that Python is quite  effective both in game development and programming education. We suggest  Python should be applied to create interactive media contents which have the same  core elements as computer games."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=47c3d76edb6a8e3fb7998d826d417196&keyword=파이썬,"프로그래밍 언어의 형식적인 의미를 적절하게 표현하면 언어를 표준화하고 최적화하여 번역하는 과정에서 중요한 역할을 수행한다. 파이썬은 주목받는 강력한 언어이고, 파이썬에 대한 형식적인 의미 구조를 정의하고 표현하는 것은 향후 유사한 언어를 설계할 때 참고할 수 있고 표준화하는 과정이나 최적화된 번역기를 구현하는 과정에서도 필요하다. 본 연구에서는 파이썬에 대한 의미 구조를 표현하기 위해 기존의 작용식을 수정하고 업그레이드해서 파이썬의 정적이고 동적인 의미 구조를 표현하는 작용식 2.0을 새롭게 제시한다. 작용식 2.0에 명세된 의미구조를 자바로 구현해 파이썬 프로그램들에 대한 실행시간을 측정하고 시뮬레이션을 통해 작용식 2.0이 구현 가능한 실제적인 의미 구조임을 입증하고, 판독성(Readability), 모듈성(Modularity), 확장성(Extensibility), 융통성(Flexibility)의 네 영역에서 명세된 작용식 2.0을 기존의 대표적인 의미 표현법과 비교하여 본 작용식 2.0의 우월성을 확인하고자 한다. To specify a formal semantics for a programming language is to do a significant part for design, standardization and translation of it. The Python is popular and powerful, it is necessary to do research for a formal semantics to specify a static and dynamic semantics for Python clearly in order to design a similar language and do an efficient translation. This paper presents the Action Equation 2.0 that specifies a formal semantics for Python to change and update Action Equation. To measure the execution time for Python programs, we implemented the semantic structure specified in Action Equation 2.0 in Java, and prove through simulation that Action Equation 2.0 is a real semantic structure that can be implemented. The specified Action Equation 2.0 is compared to other descriptions, in terms of readability, modularity, extensibility, and flexibility and then we verified that Action Equation 2.0 is superior to other formal semantics."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=76f71d8b5b930cb0e9810257f7042666&keyword=파이썬,"파이썬은 다른 정적 언어(예, C, C++, FORTRAN 등)에 비해 실행 속도가 느리기 때문에 대규모 반복이 필요한 지구동역학 코드를 작성하는데 적합하지 않은 것으로 인식되어 왔다. 그러나 파이썬의 계산 속도를 향상시키기 위해 Just-In-Time (JIT) 컴파일 등과 같은 많은 고속화 수단이 개발되었다. 우리는 파이썬을 기반으로 JIT 컴파일러에 최적화된 맨틀 유동 지구동역학 코드를 개발했다. 코드는 지구동역학 분야에서 널리 사용되는 PIC (Particle-In-Cell) 방법과 유한요소법을 결합하여 맨틀 대류를 수치 모사하며, 코드의 신뢰성을 정량적으로 평가하기 위해 잘 알려진 2차원 맨틀 대류 문제를 벤치마킹했다. 수치 모사 결과, 제곱근 평균 제곱 속도와 넛셀 수가 이전 연구와 거의 일치함을 확인했다. JIT 컴파일러를 적용한 코드는 적용하지 않았을 경우와 대비해 계산 속도가 PIC 방법에서 최대 258배, 전체 행렬 조립 과정에서 최대 30배 향상했다. 따라서, 이번 연구는 파이썬의 계산 성능이 JIT 등의 가속기를 이용하여 충분히 향상되며, 많은 지구 동역학 문제를 해결하는데 활용될 수 있음을 제시하였다. As the execution speed of Python is slower than those of other programming languages (e.g., C, C++, and FORTRAN), Python is not considered to be efficient for writing numerical geodynamic code that requires numerous iterations. Recently, many computational techniques, such as the Just-In-Time (JIT) compiler, have been developed to enhance the calculation speed of Python. Here, we developed two-dimensional (2D) numerical geodynamic code that was optimized for the JIT compiler, based on Python. Our code simulates mantle convection by combining the Particle-In-Cell (PIC) scheme and the finite element method (FEM), which are both commonly used in geodynamic modeling. We benchmarked well-known mantle convection problems to evaluate the reliability of our code, which confirmed that the root mean square velocity and Nusselt number obtained from our numerical modeling were consistent with those of the mantle convection problems. The matrix assembly and PIC processes in our code, when run with the JIT compiler, successfully achieved a speed-up 30× and 258× faster than without the JIT compiler, respectively. Our Python-based FEM-PIC code shows the high potential of Python for geodynamic modeling cases that require complex computations."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=40ee4c0f8fd9a1137f7a54760bb41745&keyword=파이썬,"In this study, we compared performance and productivity of C and Python with high-performance libraries using 3D time-domain wave propagation modeling. As a result of numerical modeling, Numba, Cython and C attained speed-ups of 1884, 2049, and 2305 times, respectively, compared with a reference Python implementation. Python programs using Numba and Cython were slower than the C program by 23.3% and 16.2%, respectively. However, the numbers of source code lines for Python programs using Numba and Cython were 45.1% and 40.7% shorter than that of C, respectively. Modeling experiments using Numba and Cython for the SEG/EAGE 3D salt dome model were 22.9% and 13.3% slower than that of the C program. Therefore, if performance difference of 20% is acceptable, it will be more productive to use Python with high-performance libraries instead of static-typing languages such as C. 본 연구에서는 3차원 시간 영역 파동 전파 모델링을 이용하여 고성능 라이브러리를 이용한 파이썬과 C언어 의 성능 및 생산성을 비교하였다. 수치 모델링 결과 고성능 파이썬 라이브러리인 Numba 또는 Cython을 사용하는 경 우와 C 언어를 사용하는 경우 순수 파이썬에 비해 각각 1844배, 2049배, 2305배 빨라졌다. Numba와 Cython 라이브러 리를 사용한 모델링의 경우 C언어보다 각각 23.3%, 16.2% 느렸다. 그러나 소스 코드 줄 수는 C언어보다 각각 45.1%, 40.7% 적었다. SEG/EAGE 3차원 암염돔 모델에 적용한 결과, Numba와 Cython을 사용한 경우 C언어에 비해 계산 속 도가 각각 22.9%, 13.3% 느렸다. 따라서 20%의 성능 차이를 받아들일 수 있는 경우 C와 같은 정적 자료형 언어 대신 고성능 파이썬 라이브러리를 이용하는 것이 더욱 생산적일 것이다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ba17ad4fc672930fc85d2949c297615a&keyword=파이썬,"Most of the courses that teach the Python programming language are liberal arts courses that all students in general universitiesmust complete. Through this, non-major students who have learned the basic programming process based on computational thinkingare strengthening their convergence capabilities to apply SW in various major fields. In the previous research results, various evaluation methods for understanding the concept of computational thinking and writing code were suggested. However, there are noexamples of evaluation problems, so it is difficult to apply them in actual course operation. Accordingly, in this paper, a Python basicprogramming curriculum that can be applied as a liberal arts subject for non-majors is proposed according to the ADDIE model. Inaddition, the case of evaluation problems for each Python element according to the proposed detailed curriculum was divided into1st and 2nd phases and suggested. Finally, the validity of the proposed evaluation problem was analyzed based on the evaluationscores of non-major students calculated in the course to which this evaluation problem case was applied. It was confirmed that theproposed evaluation problem case was applied as a real-time online non-face-to-face evaluation method to effectively evaluate theprogramming competency of non-major students. 파이썬프로그래밍언어를강의하는과목은,일반대학에서모든재학생이필수로이수하는교양과목으로대부분운영되고있다.이를통해,컴퓨팅사고에의한기초프로그래밍과정을학습한비전공자학생들이다양한전공분야에서SW를적용할수있는융합역량을강화하고있다.기존연구결과에서는컴퓨팅사고개념이해와코드작성역량에대한다양한평가방법들이제시되었다.그러나,평가문제사례는제시되지않아,실제과목운영시적용하는데어려움이있다.이에본논문에서는비전공자들을위한교양과목으로적용할수있는파이썬기초프로그래밍커리큘럼을ADDIE 모형에따라제안하였다.그리고제안된상세커리큘럼에 따른 파이썬 요소별 평가 문제 사례를 1차와 2차로 나누어 제안하였다. 마지막으로 본 평가 문제 사례를 적용한 강좌에서 산출된비전공자학생들의평가점수결과를바탕으로제안한평가문제의유효성을분석하였다.제안된평가문제사례는실시간온라인비대면평가방식으로적용하여,효과적으로비전공자학생들의프로그래밍역량을평가할수있음을확인하였다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=565b1280edea26c9b36097776a77e665&keyword=파이썬,"이 연구는 교육대학원생이 코딩 교육의 일환으로 파이썬으로 전통 무늬를 코딩해 보는 프로젝트에 대하여 탐구한 내용을 다루고 있다. 먼저, 전통 문화재에서 등장하는 무늬 중에서 기본 단위가 되는 문양을 선별 하였으며 파이썬의 기능을 활용하여 코딩하였다. 그 후에 다양한 배치를 통하여 반복적으로 나타나는 패턴을 구현하여 그래픽 디자인의 관점에서 확장 가능한 실습 프로젝트의 예시를 살펴보았다. 이러한 예시는 전통 문양의 대한 사진과 그림 등을 활용하여 초중등학교의 ICT 활용 수업에 적용해 볼 수 있으며 더 나아가 방과후 교육의 일환으로 확장 가능하다. 학생들은 실생활의 다방면에서 등장하는 무늬를 추상화하여 절차적인 방법으로 파이썬, 넷로고 등의 언어로 구현해 봄으로써 문양 디자인에 대한 일종의 마이크로월드를 구축할 수 있음을 보여주었다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=cb6f69ad94cb84e56aae8a972f9116fb&keyword=파이썬,"목적 본 연구에서는 파이썬을 적용하여 <인공지능 수학> 교과의 교수·학습 자료를 개발하고자 하였다.
방법 교수·학습 자료 개발 준거를 설정한 후 이에 따라 개발한 교수학습자료의 개선점을 찾기 위하여 현직 수학 교사 3명의 검토를 통해 자료를 수정·보완하였다. 개발된 자료를 실제 수업에 활용하였을 때 현장에서 생길 문제점을 확인하기 위해 고등학교 2학년 학생 4명을 대상으로 수업을 실시한 후 수정을 거쳐 최종 자료를 완성하였다.
결과 자료 개발의 준거로서 2015 개정 수학과 교육과정 <인공지능 수학>의 목표와 교수·학습 방법 및 유의사항을 참고하고 가공된 거대한 데이터를 제공하며, 데이터 과학자들의 실제 문제해결 절차에 따라 과제를 제시하였다. 또한 파이썬 문법을 지나치게 강조하지 않으며 소통과 협업을 촉진하는 과제를 제시하였다. 개발된 교수·학습 자료는 총 4차시로 구성되었으며, 수학적 원리가 실제로 인공지능 프로그램 제작에 사용되는 과정을 보여줄 수 있으면서도 학생들의 수준에 적절한 ‘자연어 처리를 통한 뉴스 클러스터링’을 교수학습 자료 주제로 다루었다.
결론 본 연구에서 개발한 파이썬을 적용한 <인공지능 수학> 교수·학습 자료는 인공지능이 데이터를 처리하는데 수학을 사용하는 과정을 실습해 봄으로써 학생들이 수학의 유용성을 인식하는데 도움을 주었다. 또한, 본 교수·학습 자료를 통해 데이터 과학자들의 실제 문제해결 절차를 경험해 볼 수 있었으며, 학생들의 소통과 협업이 촉진되었다. Objectives The purpose of this study is to develop teaching-learning materials for the subject <Mathematics for Artificial Intelligence>.
Methods After setting the criteria to develop objective and professional teaching-learning materials, we developed 4 sessions of teaching-learning materials for <Mathematics for Artificial Intelligence>. After that, we edited materials based on teachers’ review and field application.
Results As a criterion for the development, the goal of the 2015 revised mathematics curriculum <Mathematics for Artificial Intelligence> teaching-learning methods and notes were referred to, processed huge data was provided, and tasks were presented according to data scientists' actual problem-solving procedures. In addition, the task of promoting communication and collaboration was presented without overemphasizing Python grammar. We developed 4-sessions of teaching-learning for <Mathematics for Artificial Intelligence> using Python. And we selected ‘News clustering through natural language processing’ as the theme because it can show process of AI using mathematics to solve the problem and also it’s appropricate for the level of the students.
Conclusions This teaching-learning materials using Python helped students recognize the usefulness of mathematics by practicing the process of using mathematics to process data by AI. In addition, this teaching-learning material allows students to experience the actual problem-solving process of data scientists, and stimulate communication and collaboration."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=ca02b71f0a129932b36097776a77e665&keyword=파이썬,"This paper deals with how to improve the performance of Python language with various libraries when developing a model using big data. The Python language uses the Pandas library for processing spreadsheet-format data such as Excel. In processing data, Python operates on an in-memory basis. There is no performance issue when processing small scale of data. However, performance issues occur when processing large scale of data. Therefore, this paper introduces a method for distributed processing of execution tasks in a single cluster and multiple clusters by using a Dask library that can be used with Pandas when processing data. The experiment compares the speed of processing a simple exponential model using only Pandas on the same specification hardware and the speed of processing using a dask together. This paper presents a method to develop a model by distributing a large scale of data by CPU cores in terms of performance while maintaining that python's advantage of using various libraries is easy. 본 논문은 대량의 데이터를 활용한 모델 개발 시 다양한 라이브러리를 갖춘 파이썬 언의의 성능 향상방법을 다룬다. 파이썬 언어는 엑셀과 같은 스프레드시트 형태 데이터 처리 시 Pandas 라이브러리를 사용한다. 데이터 처리 시 파이썬은 기가단위 이하 데이터 처리 시에는 인-메모리로 연산하여 성능 측면에서 크게 이슈가 없다. 하지만 기가단위 이상 데이터 처리 시 성능 이슈가 발생한다. 이에 본 논문은 데이터 처리 시 Pandas와 같이 사용할 수 있는 Dask 라이브러리를 활용하여 단일 클러스터 및 다중 클러스터에서 실행 작업을 분산처리 가능한 방법을 소개한다. 실험은 동일 사양의 하드웨어에서 간단한 지수산출 모델을 Pandas만 사용해서 처리하는 속도와 Dask를 같이 사용해서 처리하는 속도를 비교한다. 본 논문은 파이썬의 장점인 다양한 라이브러리를 쉽게 사용할 수 있다는 점을 유지하면서 성능측면에서도 대량의 데이터를 CPU 코어들이 분산 처리하여 모델을 개발할 수 있는 방법을 제시한다."
https://www.riss.kr/search/detail/DetailView.do?p_mat_type=1a0202e37d52c72d&control_no=614c48e5d2e593517ecd42904f0c5d65&keyword=파이썬,"초등학생을 대상으로 하는 소프트웨어 교육의 도구는 블록형 교육용 프로그래밍 언어(EPL)가 주로 사용되고 있다. 블록형 EPL은 SW 교육의 입문 도구로써 장점이 많지만 확장성에서는 한계를 가지고 있다. 본 연구에서는 실제 산업 현장에서도 활발하게 사용하고 있는 텍스트 기반의 프로그래밍 언어인 파이썬을 활용한 SW 교육의 접근 방안을 모색하였다. 파이썬을 활용한 학습 프로그램과 모형을 개발하고 초등학교 6학년 학생을 대상으로 10차시를 적용하였다. 그 결과 로봇 활용 파이썬 학습 모형을 적용한 학생들의 컴퓨팅 사고력 향상에 유의미한 효과가 있었으며 초등학생을 대상으로 텍스트 기반 프로그래밍 언어의 적용 가능성을 확인할 수 있었다. The Code Block Based Educational Programming Language(EPL) is the mainstream tool for software education for elementary students. However, Code Block Based EPL has limitations in scalability, even though there are many advantages as an introductory tool for software education. In this study, we searched the approach of SW education using Python, which is a text-based programming language actively used in real industrial field. We developed a learning program and model using Python and applied it to the sixth grade elementary school students for 10 hours. As a result, we found that the robot-based Python learning model had a significant effect on improving students' thinking skills and confirmed the applicability of text-based programming language to elementary school students."
